/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * java mavlink generator tool. It should not be modified by hand.
 */

// MESSAGE GH_MESSAGE PACKING
package com.example.MAVLINK.gh;
import com.MAVLink.MAVLinkPacket;
import com.MAVLink.Messages.MAVLinkMessage;
import com.MAVLink.Messages.MAVLinkPayload;
import com.MAVLink.Messages.Units;
import com.MAVLink.Messages.Description;

/**
 * message types
 */
public class msg_gh_message extends MAVLinkMessage {

    public static final int MAVLINK_MSG_ID_GH_MESSAGE = 21100;
    public static final int MAVLINK_MSG_LENGTH = 41;
    private static final long serialVersionUID = MAVLINK_MSG_ID_GH_MESSAGE;

    
    /**
     * uint64_t
     */
    @Description("uint64_t")
    @Units("")
    public long u64;
    
    /**
     * int64_t
     */
    @Description("int64_t")
    @Units("")
    public long s64;
    
    /**
     * int32_t
     */
    @Description("int32_t")
    @Units("")
    public int s32;
    
    /**
     * float
     */
    @Description("float")
    @Units("")
    public float f;
    
    /**
     * uint16_t
     */
    @Description("uint16_t")
    @Units("")
    public int u16;
    
    /**
     * int16_t
     */
    @Description("int16_t")
    @Units("")
    public short s16;
    
    /**
     * char
     */
    @Description("char")
    @Units("")
    public byte c;
    
    /**
     * string
     */
    @Description("string")
    @Units("")
    public byte s[] = new byte[10];
    
    /**
     * uint8_t
     */
    @Description("uint8_t")
    @Units("")
    public short u8;
    
    /**
     * int8_t
     */
    @Description("int8_t")
    @Units("")
    public byte s8;
    

    /**
     * Generates the payload for a mavlink message for a message of this type
     * @return
     */
    @Override
    public MAVLinkPacket pack() {
        MAVLinkPacket packet = new MAVLinkPacket(MAVLINK_MSG_LENGTH,isMavlink2);
        packet.sysid = sysid;
        packet.compid = compid;
        packet.msgid = MAVLINK_MSG_ID_GH_MESSAGE;

        packet.payload.putUnsignedLong(u64);
        packet.payload.putLong(s64);
        packet.payload.putInt(s32);
        packet.payload.putFloat(f);
        packet.payload.putUnsignedShort(u16);
        packet.payload.putShort(s16);
        packet.payload.putByte(c);
        
        for (int i = 0; i < s.length; i++) {
            packet.payload.putByte(s[i]);
        }
                    
        packet.payload.putUnsignedByte(u8);
        packet.payload.putByte(s8);
        
        if (isMavlink2) {
            
        }
        return packet;
    }

    /**
     * Decode a gh_message message into this class fields
     *
     * @param payload The message to decode
     */
    @Override
    public void unpack(MAVLinkPayload payload) {
        payload.resetIndex();

        this.u64 = payload.getUnsignedLong();
        this.s64 = payload.getLong();
        this.s32 = payload.getInt();
        this.f = payload.getFloat();
        this.u16 = payload.getUnsignedShort();
        this.s16 = payload.getShort();
        this.c = payload.getByte();
        
        for (int i = 0; i < this.s.length; i++) {
            this.s[i] = payload.getByte();
        }
                
        this.u8 = payload.getUnsignedByte();
        this.s8 = payload.getByte();
        
        if (isMavlink2) {
            
        }
    }

    /**
     * Constructor for a new message, just initializes the msgid
     */
    public msg_gh_message() {
        this.msgid = MAVLINK_MSG_ID_GH_MESSAGE;
    }

    /**
     * Constructor for a new message, initializes msgid and all payload variables
     */
    public msg_gh_message( long u64, long s64, int s32, float f, int u16, short s16, byte c, byte[] s, short u8, byte s8) {
        this.msgid = MAVLINK_MSG_ID_GH_MESSAGE;

        this.u64 = u64;
        this.s64 = s64;
        this.s32 = s32;
        this.f = f;
        this.u16 = u16;
        this.s16 = s16;
        this.c = c;
        this.s = s;
        this.u8 = u8;
        this.s8 = s8;
        
    }

    /**
     * Constructor for a new message, initializes everything
     */
    public msg_gh_message( long u64, long s64, int s32, float f, int u16, short s16, byte c, byte[] s, short u8, byte s8, int sysid, int compid, boolean isMavlink2) {
        this.msgid = MAVLINK_MSG_ID_GH_MESSAGE;
        this.sysid = sysid;
        this.compid = compid;
        this.isMavlink2 = isMavlink2;

        this.u64 = u64;
        this.s64 = s64;
        this.s32 = s32;
        this.f = f;
        this.u16 = u16;
        this.s16 = s16;
        this.c = c;
        this.s = s;
        this.u8 = u8;
        this.s8 = s8;
        
    }

    /**
     * Constructor for a new message, initializes the message with the payload
     * from a mavlink packet
     *
     */
    public msg_gh_message(MAVLinkPacket mavLinkPacket) {
        this.msgid = MAVLINK_MSG_ID_GH_MESSAGE;

        this.sysid = mavLinkPacket.sysid;
        this.compid = mavLinkPacket.compid;
        this.isMavlink2 = mavLinkPacket.isMavlink2;
        unpack(mavLinkPacket.payload);
    }

                   
    /**
    * Sets the buffer of this message with a string, adds the necessary padding
    */
    public void setS(String str) {
        int len = Math.min(str.length(), 10);
        for (int i=0; i<len; i++) {
            s[i] = (byte) str.charAt(i);
        }

        for (int i=len; i<10; i++) {            // padding for the rest of the buffer
            s[i] = 0;
        }
    }

    /**
    * Gets the message, formatted as a string
    */
    public String getS() {
        StringBuffer buf = new StringBuffer();
        for (int i = 0; i < 10; i++) {
            if (s[i] != 0)
                buf.append((char) s[i]);
            else
                break;
        }
        return buf.toString();

    }
                             
    /**
     * Returns a string with the MSG name and data
     */
    @Override
    public String toString() {
        return "MAVLINK_MSG_ID_GH_MESSAGE - sysid:"+sysid+" compid:"+compid+" u64:"+u64+" s64:"+s64+" s32:"+s32+" f:"+f+" u16:"+u16+" s16:"+s16+" c:"+c+" s:"+s+" u8:"+u8+" s8:"+s8+"";
    }

    /**
     * Returns a human-readable string of the name of the message
     */
    @Override
    public String name() {
        return "MAVLINK_MSG_ID_GH_MESSAGE";
    }
}
        